#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Sun Mar  4 15:26:07 2007'
__CHEETAH_srcLastModified__ = 'Sat Mar  3 09:42:59 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateUserNav.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateUserNav(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<!-- begin outer most table -->
<table class="lfn">
<tr valign="top">
<td valign="top">

<form action="javascript:ResetAllResults();MakeUserNavBar();showResMenu('results');ajaxGetUserData()" method="get">
<input type="hidden" name="dbsInst" value="''')
        _v = VFFSL(SL,"dbsInst",True) # $dbsInst
        if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 7, col 44.
        write('''" id="kw_dbsSelector" />
<!-- begin menu table -->
<table class="small" cellspacing="5">
<tr>
<td align="right">
<b>Physics groups</b>
</td>
<td><div class="yellow_box" onMouseOver="KeywordHelp('kw_groups_tag','<p>Here you select the physics group.</p> <p><b>Example:</b> Higgs, top group.</p>')" onMouseOut="ClearTag('kw_groups_tag')">?</div><span id="kw_groups_tag"></span></td>
<td>
''')
        # <select id="groupSelector" onchange="javascript:replace('navSelector');showLoadingMessage('selectApps');replace('selectPrim','to be defined');replace('selectTier','to be defined');ajaxSelectApps()">
        write('<select id="kw_group" onchange="ajaxGetKWFields()">\n<option selected="selected">Select</option>\n')
        for group in VFFSL(SL,"groupList",True):
            write('<option value="')
            _v = VFFSL(SL,"group",True) # $group
            if _v is not None: write(_filter(_v, rawExpr='$group')) # from line 20, col 16.
            write('">')
            _v = VFFSL(SL,"group",True) # $group
            if _v is not None: write(_filter(_v, rawExpr='$group')) # from line 20, col 24.
            write('</option>\n')
        write('''</select>
</td>
</tr>


<tr>
<td valign="top" align="right">
<b>Data tier</b>
</td>
<td><div class="yellow_box" onMouseOver="KeywordHelp('kw_tier_tag','<p>This menu shows all known in DBS data types.</p> <p><b>Example:</b> DIGI, RECO.</p>')" onMouseOut="ClearTag('kw_tier_tag')">?</div><span id="kw_tier_tag"></span></td>
<td>
<div id="kw_tier">
<select><option>Any</option></select>
</div>
</td>
</tr>

<tr>
<td valign="top" align="right">
<b>Software releases</b>
</td>
<td><div class="yellow_box" onMouseOver="KeywordHelp('kw_rel_tag','<p>All known software releases.</p> <p><b>Example:</b> CMSSW_1_1_1</p>')" onMouseOut="ClearTag('kw_rel_tag')">?</div><span id="kw_rel_tag"></span></td>
<td>
<div id="kw_release">
<select><option>Any</option></select>
</div>
</td>
</tr>

<tr>
<td valign="top" align="right">
<b>primary dataset/<br />MC generators</b>
</td>
<td><div class="yellow_box" onMouseOver="KeywordHelp('kw_prim_tag','<p>This is a list of primary datasets known in DBS. In a case of real data it is trigger lines, in a case of MC it is MC generators.</p> <p><b>Example:</b> mc-onsel-120_PU_Zee </p>')" onMouseOut="ClearTag('kw_prim_tag')">?</div><span id="kw_prim_tag"></span></td>
<td>
<div id="kw_prim">
<select><option>Any</option></select>
</select>
</div>
</td>
</tr>

<tr>
<td valign="top" align="right">
<b>Sites</b>
</td>
<td><div class="yellow_box" onMouseOver="KeywordHelp('kw_site_tag','<p>List of know CMS sites</p> <p><b>Example: cmssrm.fnal.gov</b></p>')" onMouseOut="ClearTag('kw_site_tag')">?</div><span id="kw_site_tag"></span></td>
<td>
<select id="kw_site">
<option selected="selected" value="All">Any</option>
''')
        for site in VFFSL(SL,"siteList",True):
            write('<option>')
            _v = VFFSL(SL,"site",True) # $site
            if _v is not None: write(_filter(_v, rawExpr='$site')) # from line 73, col 9.
            write('</option>\n')
        write('''</select>
</td>
</tr>

<tr>
<td>
</td>
<td></td>
<td>
''')
        # #<input type="submit" value="Find" onclick="javascript:checkNavSelection()" />
        write('''<input type="submit" value="Find" />
</td>
</tr>
</table>

<!-- end of menu table -->
</form>
</td>
</tr>
</table>
<!-- end of outer most table -->
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateUserNav= 'respond'
if not hasattr(templateUserNav, '_initCheetahAttributes'):
    templateClass = getattr(templateUserNav, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateUserNav)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateUserNav()).run()


