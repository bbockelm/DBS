#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Sun Mar  4 15:25:58 2007'
__CHEETAH_srcLastModified__ = 'Sat Mar  3 14:26:36 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateSelectLine.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateSelectLine(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        nextId = VFFSL(SL,"id",True)+1
        write('<div id="selMenu_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 2, col 18.
        write('">\n<table class="selMenu">\n')
        if VFFSL(SL,"id",True)==1:
            write('''<tr>
<th align="left">Group task</th>
<th align="left">DBS table</th>
<th align="left">Show</th>
<th align="left">Column</th>
<th align="left">Operator</th>
<th></th>
<th></th>
</tr>
''')
        write('<tr>\n<td align="left" style="width:100px">\n<select id="selSection_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 17, col 24.
        write('" onchange="ChangeTables(')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 17, col 52.
        write(')" name="selSection">\n<option value="')
        _v = VFFSL(SL,"sectionList",True)[0] # $sectionList[0]
        if _v is not None: write(_filter(_v, rawExpr='$sectionList[0]')) # from line 18, col 16.
        write('" selected="selected">')
        _v = VFFSL(SL,"sectionList",True)[0] # $sectionList[0]
        if _v is not None: write(_filter(_v, rawExpr='$sectionList[0]')) # from line 18, col 53.
        write('</option>\n')
        for section in VFFSL(SL,"sectionList",True)[1:]:
            write('<option>')
            _v = VFFSL(SL,"section",True) # $section
            if _v is not None: write(_filter(_v, rawExpr='$section')) # from line 20, col 9.
            write('</option>\n')
        write('''</select>
</td>

<td style="width:160px">
<div id="divSectionTables_''')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 26, col 27.
        write('">\n<select id="sectionTables_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 27, col 27.
        write('" onchange="ChangeCols(')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 27, col 53.
        write(')" name="sectionTables">\n')
        for section in VFFSL(SL,"tableList",True):
            write('<option>')
            _v = VFFSL(SL,"section",True) # $section
            if _v is not None: write(_filter(_v, rawExpr='$section')) # from line 29, col 9.
            write('</option>\n')
        write('''</select>
</div>
</td>

<td style="width:50px">
<input type="checkbox" id="outCol_''')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 36, col 35.
        write('''" name="selectDBS" />
</td>

<td style="width:200px">
<div id="tableCols_''')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 40, col 20.
        write('''"></div>
</td>

<td style="width:100px">
<select id="colSel_''')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 44, col 20.
        write('" name="colOperators" onchange="ChangeWhere(\'colSel_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 44, col 75.
        write("','where_")
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 44, col 87.
        write('''\')">
<option>None</option>
<option>like</option>
<option>=</option>
<option>&lt;</option>
<option>&gt;</option>
</select>
</td>
<td>
<input type="text" size="20" id="where_''')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 53, col 40.
        write('''" name="whereClause" class="hide" />
</td>
<td align="right">
<a href="javascript:ajaxMakeLine(''')
        _v = VFFSL(SL,"nextId",True) # $nextId
        if _v is not None: write(_filter(_v, rawExpr='$nextId')) # from line 56, col 34.
        write(')"><img src="images/plus2.gif" alt="add" style="border:none" /></a>\n<a href="javascript:ClearTag(\'makeMenu_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 57, col 40.
        write('''\')"><img src="images/minus2.gif" alt="remove" style="border:none" /></a>
</td>
</tr>
</table>
</div>
<div id="makeMenu_''')
        _v = VFFSL(SL,"nextId",True) # $nextId
        if _v is not None: write(_filter(_v, rawExpr='$nextId')) # from line 62, col 19.
        write('"></div>\n<script type="text/javascript">ajaxEngine.registerAjaxObject(\'divSectionTables_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 63, col 80.
        write("', new GetDataUpdater('divSectionTables_")
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 63, col 123.
        write('\',\'replace\',\'noResultsMenu\'))</script>\n<script type="text/javascript">ajaxEngine.registerAjaxObject(\'tableCols_')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 64, col 73.
        write("', new GetDataUpdater('tableCols_")
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 64, col 109.
        write('\',\'replace\',\'noResultsMenu\'))</script>\n<script type="text/javascript">ajaxEngine.registerAjaxObject(\'makeMenu_')
        _v = VFFSL(SL,"nextId",True) # $nextId
        if _v is not None: write(_filter(_v, rawExpr='$nextId')) # from line 65, col 72.
        write("',new GetDataUpdater('makeMenu_")
        _v = VFFSL(SL,"nextId",True) # $nextId
        if _v is not None: write(_filter(_v, rawExpr='$nextId')) # from line 65, col 110.
        write('\',\'replace\',\'noResultsMenu\'))</script>\n<script type="text/javascript">ajaxFillLine(')
        _v = VFFSL(SL,"id",True) # $id
        if _v is not None: write(_filter(_v, rawExpr='$id')) # from line 66, col 45.
        write(')</script>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateSelectLine= 'respond'
if not hasattr(templateSelectLine, '_initCheetahAttributes'):
    templateClass = getattr(templateSelectLine, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateSelectLine)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateSelectLine()).run()


