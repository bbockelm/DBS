#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from DDUtil import sizeFormat, colorSizeHTMLFormat

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Thu Mar 15 12:44:28 2007'
__CHEETAH_srcLastModified__ = 'Thu Mar  8 14:42:55 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateLFN.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateLFN(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('Block name: <b>')
        _v = VFFSL(SL,"blockName",True) # $blockName
        if _v is not None: write(_filter(_v, rawExpr='$blockName')) # from line 2, col 16.
        write('</b>\n<!-- Main table -->\n')
        # #<table id="lfn_table" class="sortable" cellspacing="0" border="1">
        write('''<table id="lfn_table" cellspacing="0" border="1">
<tr class="sortable_gray">

<td>status</td>
<td>type</td>
<td>events</td>
<td>size</td>
<td>name</td>
</tr>
''')
        for item in VFFSL(SL,"lfnList",True):
            name = item[0]
            size = item[1]
            stat = item[2]
            type = item[3]
            evts = item[4]
            write('<tr class="sortable_yellow">\n<td>')
            _v = VFFSL(SL,"stat",True) # $stat
            if _v is not None: write(_filter(_v, rawExpr='$stat')) # from line 21, col 5.
            write('</td>\n<td>')
            _v = VFFSL(SL,"type",True) # $type
            if _v is not None: write(_filter(_v, rawExpr='$type')) # from line 22, col 5.
            write('</td>\n<td>')
            _v = VFFSL(SL,"evts",True) # $evts
            if _v is not None: write(_filter(_v, rawExpr='$evts')) # from line 23, col 5.
            write('</td>\n<td>')
            _v = VFFSL(SL,"colorSizeHTMLFormat",False)(VFFSL(SL,"size",True)) # $colorSizeHTMLFormat($size)
            if _v is not None: write(_filter(_v, rawExpr='$colorSizeHTMLFormat($size)')) # from line 24, col 5.
            write('</td>\n<td>\n')
            _v = VFFSL(SL,"name",True) # $name
            if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 26, col 1.
            write('''<br />
<table>
<tr>
<td><a href="''')
            _v = VFFSL(SL,"host",True) # $host
            if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 29, col 14.
            write('/getLFN_Branches?dbsInst=')
            _v = VFFSL(SL,"dbsInst",True) # $dbsInst
            if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 29, col 44.
            write('&lfn=')
            _v = VFFSL(SL,"name",True) # $name
            if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 29, col 57.
            write('">ROOT branches</a></td>\n<td>|</td>\n<td><a href="')
            _v = VFFSL(SL,"host",True) # $host
            if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 31, col 14.
            write('/getLFN_Lumis?dbsInst=')
            _v = VFFSL(SL,"dbsInst",True) # $dbsInst
            if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 31, col 41.
            write('&lfn=')
            _v = VFFSL(SL,"name",True) # $name
            if _v is not None: write(_filter(_v, rawExpr='$name')) # from line 31, col 54.
            write('">Lumis</a></td>\n')
            # 
            # <td>|</td>
            # <td><a href="javascript:ajaxGetLumis('$dbsInst','$name')">Lumis2</a></td>
            # <td>|</td>
            # <td><a href="$host/getLFN_Algos?dbsInst=$dbsInst&lfn=$name">Algorithms</a></td>
            # ###<td><a href="javascript:ajaxGetAlgos('$dbsInst','$name')">Algorithms</a></td>
            # <td>|</td>
            # <td><a href="$host/getLFN_Tiers?dbsInst=$dbsInst&lfn=$name">Tiers</a></td>
            # <td>|</td>
            # <td><a href="$host/getLFN_Parents?dbsInst=$dbsInst&lfn=$name">Parents</a></td>
            write('''
</tr>
</table>
</td>
</tr>
''')
        write('</table>\n<!-- end of main table -->\n')
        # #<script type="text/javascript">sortables_init();</script>
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateLFN= 'respond'
if not hasattr(templateLFN, '_initCheetahAttributes'):
    templateClass = getattr(templateLFN, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateLFN)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateLFN()).run()


