#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from DDUtil import sizeFormat, colorSizeHTMLFormat
from DDUtil import splitString 

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Sun Mar  4 15:25:46 2007'
__CHEETAH_srcLastModified__ = 'Sun Mar  4 13:02:13 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateLFB.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateLFB(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        # #<hr class="dbs" />
        tot = len(VFN(VFFSL(SL,"blockDict",True),"keys",False)())
        idPath = VFN(VFFSL(SL,"path",True),"replace",False)("/","___")
        write('\n')
        # #<p>
        write('contains ')
        _v = VFFSL(SL,"nEvents",True) # $nEvents
        if _v is not None: write(_filter(_v, rawExpr='$nEvents')) # from line 7, col 10.
        write(' events, ')
        _v = VFFSL(SL,"totFiles",True) # $totFiles
        if _v is not None: write(_filter(_v, rawExpr='$totFiles')) # from line 7, col 27.
        write(' files, ')
        _v = VFFSL(SL,"totSize",True) # $totSize
        if _v is not None: write(_filter(_v, rawExpr='$totSize')) # from line 7, col 44.
        write('. \n')
        # #</p>
        write('''<p>
<span id="parentGraph"></span>
</p>
''')
        # 
        if VFFSL(SL,"nEvents",True):
            # 
            tableId = "table_"+str(VFFSL(SL,"tid",True))
            write('''
<table>
<tr>
<td>Show:</td>
<td>

<table id="_sum_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 22, col 17.
            write('''" class="td_underline">
<tr>
<td>
<a href="javascript:HideTag('det_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 25, col 34.
            write("');ShowTag('sum_")
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 25, col 58.
            write("');switchLink('_sum','")
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 25, col 88.
            write('''\')">
Summary
</a>
</td>
</tr>
</table>

</td>
<td>

<table id="_det_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 35, col 17.
            write('''" class="td_plain">
<tr>
<td>
<a href="javascript:ShowTag('det_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 38, col 34.
            write("');HideTag('sum_")
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 38, col 58.
            write("');switchLink('_det','")
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 38, col 88.
            write('''\')">
Details
</a>
</td>
</tr>
</table>

</td>
</tr>
</table>
<script type="text/javascript">switchLink('_sum',\'''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 48, col 51.
            write('''\')</script>

<!-- Summary -->
<div id="sum_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 51, col 14.
            write('''">
<table cellspacing="0" cellpadding="0" border="1">
  <tr valign="top" align="center">
     <th>Location</th>
     <th>Events</th>
     <th>Files</th>
     <th>size</th>
     <th>LFNs</th>
  </tr>
''')
            for site in VFFSL(SL,"siteList",True):
                siteTotEvt = 0
                siteTotFiles = 0
                siteTotSize = 0
                #  HERE blockDict[blockName]=(nEvt,blockStatus,nFiles,blockSize,hostList)
                # 
                #  Sum total events,files,size for given site
                # 
                blockList = ""
                for bName in VFN(VFFSL(SL,"blockDict",True),"keys",False)():
                    if VFN(VFFSL(SL,"blockDict",True)[VFFSL(SL,"bName",True)][4:],"count",False)(VFFSL(SL,"site",True)):
                        siteTotEvt += VFFSL(SL,"blockDict",True)[VFFSL(SL,"bName",True)][0]
                        siteTotFiles += VFFSL(SL,"blockDict",True)[VFFSL(SL,"bName",True)][2]
                        siteTotSize += VFFSL(SL,"blockDict",True)[VFFSL(SL,"bName",True)][3]
                    if blockList:
                        blockList = blockList+","+VFFSL(SL,"bName",True)
                    else:
                        blockList = VFFSL(SL,"bName",True)
                write('  <tr valign="top" class="sortable_yellow">\n     <td><div class="dbs_cell">')
                _v = VFFSL(SL,"site",True) # $site
                if _v is not None: write(_filter(_v, rawExpr='$site')) # from line 82, col 32.
                write('</div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"siteTotEvt",True) # $siteTotEvt
                if _v is not None: write(_filter(_v, rawExpr='$siteTotEvt')) # from line 83, col 46.
                write('</div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"siteTotFiles",True) # $siteTotFiles
                if _v is not None: write(_filter(_v, rawExpr='$siteTotFiles')) # from line 84, col 46.
                write('</div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"colorSizeHTMLFormat",False)(VFFSL(SL,"siteTotSize",True)) # $colorSizeHTMLFormat($siteTotSize)
                if _v is not None: write(_filter(_v, rawExpr='$colorSizeHTMLFormat($siteTotSize)')) # from line 85, col 46.
                write('</div></td>\n     <td align="center">\n     <a href="javascript:popUp(\'')
                _v = VFFSL(SL,"host",True) # $host
                if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 87, col 33.
                write('/getLFNsForSite?dbsInst=')
                _v = VFFSL(SL,"dbsInst",True) # $dbsInst
                if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 87, col 62.
                write('&amp;site=')
                _v = VFFSL(SL,"site",True) # $site
                if _v is not None: write(_filter(_v, rawExpr='$site')) # from line 87, col 80.
                write('&amp;blockList=')
                _v = VFFSL(SL,"blockList",True) # $blockList
                if _v is not None: write(_filter(_v, rawExpr='$blockList')) # from line 87, col 100.
                write('&amp;what=cff\',1000)">cff</a>\n     <a href="javascript:popUp(\'')
                _v = VFFSL(SL,"host",True) # $host
                if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 88, col 33.
                write('/getLFNsForSite?dbsInst=')
                _v = VFFSL(SL,"dbsInst",True) # $dbsInst
                if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 88, col 62.
                write('&amp;site=')
                _v = VFFSL(SL,"site",True) # $site
                if _v is not None: write(_filter(_v, rawExpr='$site')) # from line 88, col 80.
                write('&amp;blockList=')
                _v = VFFSL(SL,"blockList",True) # $blockList
                if _v is not None: write(_filter(_v, rawExpr='$blockList')) # from line 88, col 100.
                write('''\',1000)">plain</a>
     </td>
  </tr>
''')
            write('''</table>
</div>
<!-- End of Summary table -->

<!-- Detailed -->
<div id="det_''')
            _v = VFFSL(SL,"tableId",True) # $tableId
            if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 97, col 14.
            write('''" class="hide">
<table cellspacing="0" cellpadding="0" border="1">
  <tr valign="top" align="center">
     <td>Location</td>
     <td>Events</td>
     <td>Files</td>
     <td>size</td>
     <td>LFNs</td>
     <td>status</td>
     <td>Block name</td>
  </tr>
''')
            #  HERE blockDict[blockName]=(nEvt,blockStatus,nFiles,blockSize,hostList)
            for name in VFN(VFFSL(SL,"blockDict",True),"keys",False)():
                item = VFFSL(SL,"blockDict",True)[VFFSL(SL,"name",True)]
                bName = VFN(VFFSL(SL,"name",True),"replace",False)('#','%23')
                escName = VFN(VFFSL(SL,"name",True),"replace",False)('#','\#')
                htmlName = VFN(VFFSL(SL,"name",True),"replace",False)('#','&#35;')
                nEvt = VFFSL(SL,"item",True)[0]
                bStatus = VFFSL(SL,"item",True)[1]
                nFiles = VFFSL(SL,"item",True)[2]
                size = VFFSL(SL,"item",True)[3]
                hostList = VFFSL(SL,"item",True)[4:]
                write('  <tr valign="top" bgcolor="#F0F0F0">\n     <td><div class="dbs_cell">\n')
                for site in VFFSL(SL,"hostList",True):
                    write('      ')
                    _v = VFFSL(SL,"site",True) # $site
                    if _v is not None: write(_filter(_v, rawExpr='$site')) # from line 122, col 7.
                    write('\n')
                    if VFFSL(SL,"site",True)!=VFFSL(SL,"hostList",True)[-1]:
                        write('      <br />\n')
                write('     </div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"nEvt",True) # $nEvt
                if _v is not None: write(_filter(_v, rawExpr='$nEvt')) # from line 128, col 46.
                write('</div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"nFiles",True) # $nFiles
                if _v is not None: write(_filter(_v, rawExpr='$nFiles')) # from line 129, col 46.
                write('</div></td>\n     <td align="right"><div class="dbs_cell">')
                _v = VFFSL(SL,"colorSizeHTMLFormat",False)(VFFSL(SL,"size",True)) # $colorSizeHTMLFormat($size)
                if _v is not None: write(_filter(_v, rawExpr='$colorSizeHTMLFormat($size)')) # from line 130, col 46.
                write('</div></td>\n     <td align="center"><div class="dbs_cell">\n     <a href="javascript:popUp(\'')
                _v = VFFSL(SL,"host",True) # $host
                if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 132, col 33.
                write('/getLFN_cfg?dbsInst=')
                _v = VFFSL(SL,"dbsInst",True) # $dbsInst
                if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 132, col 58.
                write('&amp;blockName=')
                _v = VFFSL(SL,"bName",True) # $bName
                if _v is not None: write(_filter(_v, rawExpr='$bName')) # from line 132, col 81.
                write('&amp;dataset=')
                _v = VFFSL(SL,"path",True) # $path
                if _v is not None: write(_filter(_v, rawExpr='$path')) # from line 132, col 100.
                write('\',1000)">cff</a>, \n     <a href="javascript:popUp(\'')
                _v = VFFSL(SL,"host",True) # $host
                if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 133, col 33.
                write('/getLFN_txt?dbsInst=')
                _v = VFFSL(SL,"dbsInst",True) # $dbsInst
                if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 133, col 58.
                write('&amp;blockName=')
                _v = VFFSL(SL,"bName",True) # $bName
                if _v is not None: write(_filter(_v, rawExpr='$bName')) # from line 133, col 81.
                write('&amp;dataset=')
                _v = VFFSL(SL,"path",True) # $path
                if _v is not None: write(_filter(_v, rawExpr='$path')) # from line 133, col 100.
                write('\',900)">txt</a>,\n     <a href="javascript:popUp(\'')
                _v = VFFSL(SL,"host",True) # $host
                if _v is not None: write(_filter(_v, rawExpr='$host')) # from line 134, col 33.
                write('/getLFNlist?dbsInst=')
                _v = VFFSL(SL,"dbsInst",True) # $dbsInst
                if _v is not None: write(_filter(_v, rawExpr='$dbsInst')) # from line 134, col 58.
                write('&amp;blockName=')
                _v = VFFSL(SL,"bName",True) # $bName
                if _v is not None: write(_filter(_v, rawExpr='$bName')) # from line 134, col 81.
                write('&amp;dataset=')
                _v = VFFSL(SL,"path",True) # $path
                if _v is not None: write(_filter(_v, rawExpr='$path')) # from line 134, col 100.
                write('''\',1000)">details</a>
     </div>
     </td>
''')
                if VFFSL(SL,"bStatus",True)=="OPEN" or VFFSL(SL,"bStatus",True)==1:
                    write('     <td align="center" style="background-color:AliceBlue;"><div class="dbs_cell">OPEN</div></td>\n')
                else:
                    write('     <td align="center" style="background-color:AntiqueWhite;"><div class="dbs_cell">CLOSED</div></td>\n')
                write('     <td align="left" class="td20">\n')
                sName = VFFSL(SL,"splitString",False)(VFFSL(SL,"name",True),30,"\\n")
                write('     ')
                _v = VFFSL(SL,"sName",True) # $sName
                if _v is not None: write(_filter(_v, rawExpr='$sName')) # from line 145, col 6.
                write('''
     </td>
  </tr>
''')
            write('''</table>
</div>
<!-- End of Detailed table -->

<br />
''')
            # 
        else:
            write('<span class="box_red">No data found</span>\n')
        # 
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateLFB= 'respond'
if not hasattr(templateLFB, '_initCheetahAttributes'):
    templateClass = getattr(templateLFB, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateLFB)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateLFB()).run()


