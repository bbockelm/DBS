#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Thu Mar 15 12:44:40 2007'
__CHEETAH_srcLastModified__ = 'Thu Mar 15 10:37:57 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateSearchEngine.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateSearchEngine(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('<table cellspace="1">\n<tr><td>\n')
        # <div id="parameterNameList"><img src="images/loading.gif" alt="loading" /> Loading parameters</div>
        write('''<div id="cfgparamlist"><img src="images/loading.gif" alt="loading" />Loading config parameters</div>
</td>
<td>
''')
        # #<div id="parameterNameListOperators">$operators</div>
        write('''<select id="parameterListOperators">
<option>=</option>
<option>&lt;</option>
<option>&gt;</option>
<option>&lt;=</option>
<option>&gt;=</option>
<option>like</option>
<option>likeLeft</option>
<option>likeRight</option>
</select>
</td>
<td>
<input size="20" type="text" id="searchInput" ></input>
</td>
<td>
<input type="button" value="Add" onclick="AddConfigParameter()" />
</td>
<td>
<input type="button" value="Search" onclick="ResetAllResults();ShowTag('results');ajaxGetLucene()" />
</td>
</tr>
</table>

<p />
<b>Choosen parameters (to remove click on <img src="images/minus.png" alt="remove" style="border:none"  align="top"/>):</b>
<input type="hidden" value="0" id="parameterCounter" />
<div class="div_scroll_border">
<table>
<div id="parameterSpace"></div>
</table>
</div>

''')
        # 
        # Results: 
        # <table id="webSearchResultsGrid_updater" class="intro">
        # </table>
        # Statistics: 
        # <div id="webSearchStats">webSearchStats</div>
        # Number of results: 
        # <div id="configureWebSearchRows">configureWebSearchRows</div>
        # <div id="errorResponse"></div>
        write('\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateSearchEngine= 'respond'
if not hasattr(templateSearchEngine, '_initCheetahAttributes'):
    templateClass = getattr(templateSearchEngine, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateSearchEngine)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateSearchEngine()).run()


