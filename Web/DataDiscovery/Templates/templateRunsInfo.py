#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Sun Mar  4 15:25:55 2007'
__CHEETAH_srcLastModified__ = 'Sat Mar  3 09:48:20 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateRunsInfo.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateRunsInfo(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('Processed dataset:<br /> \n<span class="offset_left">\n<b>')
        _v = VFFSL(SL,"proc",True) # $proc
        if _v is not None: write(_filter(_v, rawExpr='$proc')) # from line 3, col 4.
        write('</b>\n</span>\n')
        # #<table id="$tableId" class="sortable" cellspacing="0" cellpadding="0" border="1">
        write('<table id="')
        _v = VFFSL(SL,"tableId",True) # $tableId
        if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 6, col 12.
        write('" cellspacing="0" cellpadding="0" border="1">\n<tr valign="top" align="center" id="tr')
        _v = VFFSL(SL,"tableId",True) # $tableId
        if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 7, col 39.
        write('" name="tr')
        _v = VFFSL(SL,"tableId",True) # $tableId
        if _v is not None: write(_filter(_v, rawExpr='$tableId')) # from line 7, col 57.
        write('''" class="sortable_gray">
<td>Run</td>
<td>Events</td>
<td>Lumi sec.</td>
<td>Total L</td>
<td>Store</td>
<td>StartOfRun</td>
<td>EndOfRun</td>
<td>Created by</td>
<td>Creation time</td>
<td>Modified by</td>
<td>Modifiction time</td>
</tr>
''')
        for dbsDict in VFFSL(SL,"runList",True):
            write('<tr valign="top" bgcolor="#FFFADC" name="dbs_row_sumInfo" id="dbs_row_sumInfo">\n')
            # # I need to get run type and decide do I need or not provide a link to run quality DB.
            write('<td align="center">\n')
            if VFN(VFFSL(SL,"dbsDict",True)['Type'],"lower",False)()=='raw':
                write('<a href="http://cmsmon.cern.ch/cmsdb/servlet/RunSummary?RUN=')
                _v = VFFSL(SL,"dbsDict",True)['RunNumber'] # $dbsDict['RunNumber']
                if _v is not None: write(_filter(_v, rawExpr="$dbsDict['RunNumber']")) # from line 25, col 61.
                write('">\n')
                _v = VFFSL(SL,"dbsDict",True)['RunNumber'] # $dbsDict['RunNumber']
                if _v is not None: write(_filter(_v, rawExpr="$dbsDict['RunNumber']")) # from line 26, col 1.
                write('\n</a>\n')
            else:
                _v = VFFSL(SL,"dbsDict",True)['RunNumber'] # $dbsDict['RunNumber']
                if _v is not None: write(_filter(_v, rawExpr="$dbsDict['RunNumber']")) # from line 29, col 1.
                write('\n')
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['NumberOfEvents'] # $dbsDict['NumberOfEvents']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['NumberOfEvents']")) # from line 32, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['NumberOfLumiSections'] # $dbsDict['NumberOfLumiSections']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['NumberOfLumiSections']")) # from line 33, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['TotalLuminosity'] # $dbsDict['TotalLuminosity']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['TotalLuminosity']")) # from line 34, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['StoreNumber'] # $dbsDict['StoreNumber']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['StoreNumber']")) # from line 35, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['StartOfRun'] # $dbsDict['StartOfRun']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['StartOfRun']")) # from line 36, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['EndOfRun'] # $dbsDict['EndOfRun']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['EndOfRun']")) # from line 37, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['CreatedBy'] # $dbsDict['CreatedBy']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['CreatedBy']")) # from line 38, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['CreationDate'] # $dbsDict['CreationDate']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['CreationDate']")) # from line 39, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['LastModifiedBy'] # $dbsDict['LastModifiedBy']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['LastModifiedBy']")) # from line 40, col 19.
            write('</td>\n<td align="right">')
            _v = VFFSL(SL,"dbsDict",True)['LastModificationDate'] # $dbsDict['LastModificationDate']
            if _v is not None: write(_filter(_v, rawExpr="$dbsDict['LastModificationDate']")) # from line 41, col 19.
            write('</td>\n</tr>\n')
        write('</table>\n<hr class="dbs" />\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateRunsInfo= 'respond'
if not hasattr(templateRunsInfo, '_initCheetahAttributes'):
    templateClass = getattr(templateRunsInfo, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateRunsInfo)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateRunsInfo()).run()


