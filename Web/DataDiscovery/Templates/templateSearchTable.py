#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'
__CHEETAH_genTime__ = 'Thu Mar 15 12:44:40 2007'
__CHEETAH_srcLastModified__ = 'Tue Mar 13 16:58:03 2007'
__CHEETAH_src__ = 'Templates/tmpl/templateSearchTable.tmpl'
__CHEETAH_version__ = '2.0b5'

##################################################
## CLASSES

class templateSearchTable(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahAttributes(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if not trans and not callable(self.transaction):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<p />

<div id="builderFinder" class="show_inline">

<div class="div_scroll">
''')
        # #<form action="javascript:ajaxSearch();" method="get">
        write('<form action="')
        _v = VFFSL(SL,"searchFunction",True) # $searchFunction
        if _v is not None: write(_filter(_v, rawExpr='$searchFunction')) # from line 7, col 15.
        write('''" method="get">

<table width="100%">
<tr>
<td align="left">
''')
        if VFFSL(SL,"userMode",True):
            write('<input type="hidden" name="dbsInst" value="')
            _v = VFFSL(SL,"dbsList",True)[0] # $dbsList[0]
            if _v is not None: write(_filter(_v, rawExpr='$dbsList[0]')) # from line 13, col 44.
            write('" id="finder_dbsSelector" />\n')
        else:
            write('DBS instance:\n<select name="keywordsSearch_dbsInst" id="finder_dbsSelector">\n')
            for dbs in VFFSL(SL,"dbsList",True):
                write('<option value="')
                _v = VFFSL(SL,"dbs",True) # $dbs
                if _v is not None: write(_filter(_v, rawExpr='$dbs')) # from line 18, col 16.
                write('">')
                _v = VFFSL(SL,"dbs",True) # $dbs
                if _v is not None: write(_filter(_v, rawExpr='$dbs')) # from line 18, col 22.
                write('</option>\n')
            write('</select>\n')
        write('''</tr>
</table>

<p>
''')
        _v = VFFSL(SL,"selectLine",True) # $selectLine
        if _v is not None: write(_filter(_v, rawExpr='$selectLine')) # from line 26, col 1.
        write('''
</p>
<p />
<div align="right">
Query limit:
<input type="text" value="20" size="3" maxlength="3" id="kw_limit" />,
&nbsp;
alias: <input type="text" name="finderAlias" size="30" id="kw_alias" /> 
<input type="button" value="Save" id="saveQuery" onclick="javascript:ajaxFinderStoreQuery();" />
&nbsp;
<input type="button" value="Select all" id="showAll-button" onclick="javascript:SelectAll('selectDBS')" />
&nbsp;
<input type="reset"  value="Reset" id="reset-button"  />
&nbsp;
''')
        # #<input type="submit" value="Search" id="submitQuery" onclick="javascript:showWaitingMessage();ajaxWriteUserQuery();" />
        write('''<input type="submit" value="Search" id="submitQuery" onclick="javascript:showWaitingMessage()" />
</div>

</form>
</div>

</div> <!-- end of div id="_builderFinder" -->


<div id="queriesFinder" class="hide">
My query alias: <input type="text" size="30" id="kw_alias_lookup" /> 
<input type="submit" value="Search" id="sButton-searchQueries" onclick="javascript:ajaxFinderSearchQuery()" />
<p>
<div class="div_scroll"><div id="myQueries"></div></div>
</p>
</div>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    def __str__(self): return self.respond()

    _mainCheetahMethod_for_templateSearchTable= 'respond'
if not hasattr(templateSearchTable, '_initCheetahAttributes'):
    templateClass = getattr(templateSearchTable, '_CHEETAH_templateClass', Template)
    templateClass._assignRequiredMethodsToClass(templateSearchTable)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=templateSearchTable()).run()


