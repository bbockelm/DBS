/* soapProxy.h
   Generated by gSOAP 2.7.6e from ../../interface/Cpp/Interface.hpp
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapService_H
#define soapService_H
#include "soapH.h"
class Service
{   public:
	struct soap *soap;
	const char *endpoint;
	Service()
	{ soap = soap_new(); endpoint = "http://cmssrv22.fnal.gov:27983"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"DBS", "http://tempuri.org/DBS.xsd", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	virtual ~Service() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); soap_del(soap); } };
	virtual int DBS__createPrimaryDataset(DBS__PrimaryDataset *primaryDataset, int &primaryDatasetId) { return soap ? soap_call_DBS__createPrimaryDataset(soap, endpoint, NULL, primaryDataset, primaryDatasetId) : SOAP_EOM; };
	virtual int DBS__createProcessedDataset(DBS__ProcessedDataset *processedDataset, int &processedDatasetId) { return soap ? soap_call_DBS__createProcessedDataset(soap, endpoint, NULL, processedDataset, processedDatasetId) : SOAP_EOM; };
	virtual int DBS__createFileBlock(std::string datasetPathName, DBS__Block *block, int &fileBlockId) { return soap ? soap_call_DBS__createFileBlock(soap, endpoint, NULL, datasetPathName, block, fileBlockId) : SOAP_EOM; };
	virtual int DBS__insertEventCollections(std::string datasetPathName, std::vector<DBS__EventCollection * >eventCollectionList, int &result) { return soap ? soap_call_DBS__insertEventCollections(soap, endpoint, NULL, datasetPathName, eventCollectionList, result) : SOAP_EOM; };
	virtual int DBS__getDatasetContents(std::string datasetPathName, bool listFiles, std::vector<DBS__Block * >&blockList) { return soap ? soap_call_DBS__getDatasetContents(soap, endpoint, NULL, datasetPathName, listFiles, blockList) : SOAP_EOM; };
	virtual int DBS__getDatasetFileBlocks(std::string datasetPathName, std::vector<DBS__Block * >&blockList) { return soap ? soap_call_DBS__getDatasetFileBlocks(soap, endpoint, NULL, datasetPathName, blockList) : SOAP_EOM; };
};
#endif
