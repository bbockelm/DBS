/* soapServer.cpp
   Generated by gSOAP 2.7.6e from ../../interface/Cpp/Interface.hpp
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.6e 2006-03-08 17:26:20 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (!--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:createPrimaryDataset"))
		return soap_serve_DBS__createPrimaryDataset(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:createProcessedDataset"))
		return soap_serve_DBS__createProcessedDataset(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:createFileBlock"))
		return soap_serve_DBS__createFileBlock(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:insertEventCollections"))
		return soap_serve_DBS__insertEventCollections(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:getDatasetContents"))
		return soap_serve_DBS__getDatasetContents(soap);
	if (!soap_match_tag(soap, soap->tag, "DBS:getDatasetFileBlocks"))
		return soap_serve_DBS__getDatasetFileBlocks(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__createPrimaryDataset(struct soap *soap)
{	struct DBS__createPrimaryDataset soap_tmp_DBS__createPrimaryDataset;
	struct DBS__createPrimaryDatasetResponse soap_tmp_DBS__createPrimaryDatasetResponse;
	soap_default_DBS__createPrimaryDatasetResponse(soap, &soap_tmp_DBS__createPrimaryDatasetResponse);
	soap_default_DBS__createPrimaryDataset(soap, &soap_tmp_DBS__createPrimaryDataset);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__createPrimaryDataset(soap, &soap_tmp_DBS__createPrimaryDataset, "DBS:createPrimaryDataset", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__createPrimaryDataset(soap, soap_tmp_DBS__createPrimaryDataset.primaryDataset, soap_tmp_DBS__createPrimaryDatasetResponse.primaryDatasetId);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__createPrimaryDatasetResponse(soap, &soap_tmp_DBS__createPrimaryDatasetResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__createPrimaryDatasetResponse(soap, &soap_tmp_DBS__createPrimaryDatasetResponse, "DBS:createPrimaryDatasetResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__createPrimaryDatasetResponse(soap, &soap_tmp_DBS__createPrimaryDatasetResponse, "DBS:createPrimaryDatasetResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__createProcessedDataset(struct soap *soap)
{	struct DBS__createProcessedDataset soap_tmp_DBS__createProcessedDataset;
	struct DBS__createProcessedDatasetResponse soap_tmp_DBS__createProcessedDatasetResponse;
	soap_default_DBS__createProcessedDatasetResponse(soap, &soap_tmp_DBS__createProcessedDatasetResponse);
	soap_default_DBS__createProcessedDataset(soap, &soap_tmp_DBS__createProcessedDataset);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__createProcessedDataset(soap, &soap_tmp_DBS__createProcessedDataset, "DBS:createProcessedDataset", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__createProcessedDataset(soap, soap_tmp_DBS__createProcessedDataset.processedDataset, soap_tmp_DBS__createProcessedDatasetResponse.processedDatasetId);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__createProcessedDatasetResponse(soap, &soap_tmp_DBS__createProcessedDatasetResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__createProcessedDatasetResponse(soap, &soap_tmp_DBS__createProcessedDatasetResponse, "DBS:createProcessedDatasetResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__createProcessedDatasetResponse(soap, &soap_tmp_DBS__createProcessedDatasetResponse, "DBS:createProcessedDatasetResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__createFileBlock(struct soap *soap)
{	struct DBS__createFileBlock soap_tmp_DBS__createFileBlock;
	struct DBS__createFileBlockResponse soap_tmp_DBS__createFileBlockResponse;
	soap_default_DBS__createFileBlockResponse(soap, &soap_tmp_DBS__createFileBlockResponse);
	soap_default_DBS__createFileBlock(soap, &soap_tmp_DBS__createFileBlock);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__createFileBlock(soap, &soap_tmp_DBS__createFileBlock, "DBS:createFileBlock", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__createFileBlock(soap, soap_tmp_DBS__createFileBlock.datasetPathName, soap_tmp_DBS__createFileBlock.block, soap_tmp_DBS__createFileBlockResponse.fileBlockId);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__createFileBlockResponse(soap, &soap_tmp_DBS__createFileBlockResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__createFileBlockResponse(soap, &soap_tmp_DBS__createFileBlockResponse, "DBS:createFileBlockResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__createFileBlockResponse(soap, &soap_tmp_DBS__createFileBlockResponse, "DBS:createFileBlockResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__insertEventCollections(struct soap *soap)
{	struct DBS__insertEventCollections soap_tmp_DBS__insertEventCollections;
	struct DBS__insertEventCollectionsResponse soap_tmp_DBS__insertEventCollectionsResponse;
	soap_default_DBS__insertEventCollectionsResponse(soap, &soap_tmp_DBS__insertEventCollectionsResponse);
	soap_default_DBS__insertEventCollections(soap, &soap_tmp_DBS__insertEventCollections);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__insertEventCollections(soap, &soap_tmp_DBS__insertEventCollections, "DBS:insertEventCollections", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__insertEventCollections(soap, soap_tmp_DBS__insertEventCollections.datasetPathName, soap_tmp_DBS__insertEventCollections.eventCollectionList, soap_tmp_DBS__insertEventCollectionsResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__insertEventCollectionsResponse(soap, &soap_tmp_DBS__insertEventCollectionsResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__insertEventCollectionsResponse(soap, &soap_tmp_DBS__insertEventCollectionsResponse, "DBS:insertEventCollectionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__insertEventCollectionsResponse(soap, &soap_tmp_DBS__insertEventCollectionsResponse, "DBS:insertEventCollectionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__getDatasetContents(struct soap *soap)
{	struct DBS__getDatasetContents soap_tmp_DBS__getDatasetContents;
	struct DBS__getDatasetContentsResponse soap_tmp_DBS__getDatasetContentsResponse;
	soap_default_DBS__getDatasetContentsResponse(soap, &soap_tmp_DBS__getDatasetContentsResponse);
	soap_default_DBS__getDatasetContents(soap, &soap_tmp_DBS__getDatasetContents);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__getDatasetContents(soap, &soap_tmp_DBS__getDatasetContents, "DBS:getDatasetContents", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__getDatasetContents(soap, soap_tmp_DBS__getDatasetContents.datasetPathName, soap_tmp_DBS__getDatasetContents.listFiles, soap_tmp_DBS__getDatasetContentsResponse.blockList);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__getDatasetContentsResponse(soap, &soap_tmp_DBS__getDatasetContentsResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__getDatasetContentsResponse(soap, &soap_tmp_DBS__getDatasetContentsResponse, "DBS:getDatasetContentsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__getDatasetContentsResponse(soap, &soap_tmp_DBS__getDatasetContentsResponse, "DBS:getDatasetContentsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_DBS__getDatasetFileBlocks(struct soap *soap)
{	struct DBS__getDatasetFileBlocks soap_tmp_DBS__getDatasetFileBlocks;
	struct DBS__getDatasetFileBlocksResponse soap_tmp_DBS__getDatasetFileBlocksResponse;
	soap_default_DBS__getDatasetFileBlocksResponse(soap, &soap_tmp_DBS__getDatasetFileBlocksResponse);
	soap_default_DBS__getDatasetFileBlocks(soap, &soap_tmp_DBS__getDatasetFileBlocks);
	soap->encodingStyle = NULL;
	if (!soap_get_DBS__getDatasetFileBlocks(soap, &soap_tmp_DBS__getDatasetFileBlocks, "DBS:getDatasetFileBlocks", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = DBS__getDatasetFileBlocks(soap, soap_tmp_DBS__getDatasetFileBlocks.datasetPathName, soap_tmp_DBS__getDatasetFileBlocksResponse.blockList);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_DBS__getDatasetFileBlocksResponse(soap, &soap_tmp_DBS__getDatasetFileBlocksResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_DBS__getDatasetFileBlocksResponse(soap, &soap_tmp_DBS__getDatasetFileBlocksResponse, "DBS:getDatasetFileBlocksResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_DBS__getDatasetFileBlocksResponse(soap, &soap_tmp_DBS__getDatasetFileBlocksResponse, "DBS:getDatasetFileBlocksResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */
