
import dbsclient
apidata = dbsclient.Primarydataset_ClientAPIData()

apidata.mcdecaychain = dbsclient.ASTR("test_value_mcdecaychain")
apidata.mcchanneldescription = dbsclient.ASTR("test_value_mcchanneldescription")
apidata.streamannotation = dbsclient.ASTR("test_value_streamannotation")
apidata.primarydatasetid = dbsclient.AINT(123)
apidata.abstractdatasetannotation = dbsclient.ASTR("test_value_abstractdatasetannotation")
apidata.triggerdescriptionid = dbsclient.AINT(123)
apidata.physicsgroupconvener = dbsclient.AINT(123)
apidata.mcproduction = dbsclient.ASTR("test_value_mcproduction")
apidata.abstractdatasetdescriptionid = dbsclient.AINT(123)
apidata.streamid = dbsclient.AINT(123)
apidata.physicsgroupid = dbsclient.AINT(123)
apidata.triggerpathdescriptionid = dbsclient.AINT(123)
apidata.startdate = dbsclient.ASTR("test_value_startdate")
apidata.triggerpathdescription = dbsclient.ASTR("test_value_triggerpathdescription")
apidata.enddate = dbsclient.ASTR("test_value_enddate")
apidata.mcdescriptionid = dbsclient.AINT(123)
apidata.mcchanneldescriptionid = dbsclient.AINT(123)
apidata.streamname = dbsclient.ASTR("test_value_streamname")
apidata.mcdataset = dbsclient.ACHR('y')
apidata.openforwriting = dbsclient.ACHR('y')
apidata.cobradatasetname = dbsclient.ASTR("test_value_cobradatasetname")
apidata.physicsgroupname = dbsclient.ASTR("test_value_physicsgroupname")
apidata.abstractdatasetname = dbsclient.ASTR("test_value_abstractdatasetname")

client = dbsclient.DBSClient()
s = dbsclient.DBSClient.str("mydataset")
a = client.createPrimaryDataset(s, apidata)
print a
