#!/usr/bin/env perl

BEGIN { use strict; use warnings; $^W=1; }
use CGI 'header', 'param';

# ###############################################
# Main program

my $dbparams = "/afs/cern.ch/cms/aprom/DBS/DBAccessInfo/DBParam";
my $tools = "/afs/cern.ch/cms/aprom/phedex/Tools";
my $xmltools = "/afs/cern.ch/cms/aprom/phedex/PHEDEX";

# Get parameters
my $api = param('api');
if (! defined $api)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: no API call specified.\n";
  exit (1);
}
if (! grep ($_ eq $api, qw(getDatasetProvenance getDatasetContents)))
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: API not recognised.\n";
  exit (1);
}

my $path = param('path');
if (! defined $path)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: no path specified.\n";
  exit (1);
}
if ($path !~ m|^[A-Za-z0-9_./]+$|)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: unsafe characters in path.\n";
  exit (1);
}
if ($path !~ m|^([^/]+)/([^/]+)/([^/]+)$|)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: expected path of the form DATASET/TIER/OWNER.\n";
  exit (1);
}

my $dataset = $1;
my $tier = $2;
my $owner = $3;

my $datatier = param('datatier');
if (defined $datatier && $api ne 'getDatasetProvenance')
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: datatier accepted only with api=getDatasetProvenance.\n";
  exit (1);
}
if (defined $datatier && $datatier !~ m|^[A-Za-z,]+$|)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: unsafe characters in datatier.\n";
  exit (1);
}

# Create temporary output file
chomp (my $outfile = qx(mktemp /tmp/cms-dbs-xmldump.XXXXXXX));
if (! $outfile || ! -f $outfile)
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: cannot write temporary files.\n";
  exit (1);
}

# Execute the API call as an external command
my $cmd = "";
$cmd .= " . $tools/oraenv.sh;";
$cmd .= " . $tools/perlenv.sh;";
$cmd .= " $xmltools/Utilities/DBSXMLDump";
$cmd .= "  -from DBS -db $dbparams:Production/Reader";
$cmd .= "  -datatier '$datatier'" if defined $datatier;
$cmd .= "  -$api -to $outfile '$owner/$dataset'";

if (my $rc = system("($cmd) >/dev/null 2>&1"))
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: DBSXMLDump failed.\n";
  unlink ($outfile);
  exit (1);
}

if (! open (OUT, "< $outfile"))
{
  print header (-type => 'text/plain', -status => '400 Bad request');
  print "ERROR: no output.\n";
  unlink ($outfile);
  exit (1);
}

print header ('text/plain');
print <OUT>;
close (OUT);

unlink ($outfile);
exit (0);
