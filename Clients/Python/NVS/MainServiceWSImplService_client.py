##################################################
# file: MainServiceWSImplService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /home/sekhri/zsi/ZSI-2.1-a1/scripts/wsdl2py MainServiceWSImplService.wsdl
# 
##################################################

from MainServiceWSImplService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class MainServiceWSImplServiceLocator:
    #MainServiceWSImplPort_address = "http://cmssrv48.fnal.gov:8585/nvs/NVWebService"
    MainServiceWSImplPort_address = "http://cmsdbssrv.cern.ch/nvs/NVWebService"
    def getMainServiceWSImplPortAddress(self):
        return MainServiceWSImplServiceLocator.MainServiceWSImplPort_address
    def getMainServiceWSImplPort(self, url=None, **kw):
        return MainServiceWSImplPortBindingSOAP(url or MainServiceWSImplServiceLocator.MainServiceWSImplPort_address, **kw)

# Methods
class MainServiceWSImplPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: validate
    def validate(self, request, **kw):
        if isinstance(request, validate) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(validateResponse.typecode)
        return response

validate = GED("http://service.dm.nvs.fnal.gov/", "validate").pyclass
validateResponse = GED("http://service.dm.nvs.fnal.gov/", "validateResponse").pyclass
